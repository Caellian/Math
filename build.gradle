/*
 * The MIT License (MIT)
 * Copyright (c) 2016 Tin Å vagelj <tin.svagelj.email@gmail.com> a.k.a. Caellian
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.61'
    id 'org.jetbrains.dokka' version '0.9.17'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.2.0'
    testImplementation 'org.assertj:assertj-core:3.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
}

jar {
    baseName = 'math'

    manifest {
        attributes 'Implementation-Title': 'Math',
                'Implementation-Version': version,
                'Implementation-Vendor': 'Tin Svagelj (Caellian)',
                'Implementation-Vendor-Id': 'hr.caellian',
                'Bundle-License': 'https://github.com/Caellian/Math/blob/master/LICENSE.md'
    }
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'

    from('.') {
        include 'CHANGELOG.yml'
        include 'CONTRIBUTING.md'
        include 'README.md'
        include 'LICENSE.md'
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource

    manifest {
        attributes 'Implementation-Title': 'Math',
                'Implementation-Version': version,
                'Implementation-Vendor': 'Tin Svagelj (Caellian)',
                'Implementation-Vendor-Id': 'hr.caellian',
                'Bundle-License': 'https://github.com/Caellian/Math/blob/master/LICENSE.md'
    }

    from('.') {
        include 'CHANGELOG.yml'
        include 'CONTRIBUTING.md'
        include 'README.md'
        include 'LICENSE.md'
    }
}

task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from "$buildDir/javadoc"

    manifest {
        attributes 'Implementation-Title': 'Math',
                'Implementation-Version': version,
                'Implementation-Vendor': 'Tin Svagelj (Caellian)',
                'Implementation-Vendor-Id': 'hr.caellian',
                'Bundle-License': 'https://github.com/Caellian/Math/blob/master/LICENSE.md'
    }

    from('.') {
        include 'CHANGELOG.yml'
        include 'CONTRIBUTING.md'
        include 'README.md'
        include 'LICENSE.md'
    }
}

task prepareRelease(type: Sync, dependsOn: build) {
    from "$buildDir/libs"
    from 'pom.xml'
    into 'release'
    rename ('pom.xml', "${rootProject.name}-${version}.pom")
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = true
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
