/*
 * The MIT License (MIT)
 * Copyright (c) 2016 Tin Å vagelj <tin.svagelj.email@gmail.com> a.k.a. Caellian
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'eclipse'

repositories {
    jcenter()
}

version = "1.2.0"
group= "hr.caellian.math"

dependencies {
    compile 'org.scala-lang:scala-library:2.12.+'
    compile 'org.apache.commons:commons-math3:3.6'

    testCompile 'junit:junit:4.11'
    testCompile 'org.scalatest:scalatest_2.9.3:2.0.M5b'
    testCompile 'org.specs2:scalatest_2.9.3:2.4.16'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task scaladocJar(type: Jar, dependsOn: scaladoc) {
    classifier = 'javadoc'
    from scaladoc.destinationDir
}

task prepareRelease(type: Sync, dependsOn: build) {
    from "$buildDir/libs"
    from 'pom.xml'
    into 'release'
    rename ('pom.xml', "${rootProject.name}-${version}.pom")

    doLast {
        for (File file : new File('release').listFiles()) {
            if (file.name.startsWith("$rootProject.name")){
                exec {
                    executable 'gpg'
                    args '-ab', file.getAbsolutePath()
                }
            } else {
                file.deleteOnExit()
            }
        }
    }
}

artifacts {
    archives sourcesJar
    archives scaladocJar
}
